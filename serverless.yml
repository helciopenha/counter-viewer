service: counter-viewer
frameworkVersion: '3'

custom:
  tableName: 'users-table-${sls:stage}'
  tableNameViewers: 'count-viewers-${sls:stage}'

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
            - Fn::GetAtt: [ CountViewer, Arn ]
  environment:
    USERS_TABLE: ${self:custom.tableName}
  httpApi:
    cors: true

plugins:
  - serverless-offline

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: '*'

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}

    CountViewer:
      Type: "AWS::DynamoDB::Table"
      Properties:             
        TableName: ${self:custom.tableNameViewers}
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
